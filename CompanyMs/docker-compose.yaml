


#services:
#  postgres:
#    container_name: postgres_container
#    image: postgres
#    environment:
#      POSTGRES_USER: embarkx
#      POSTGRES_PASSWORD: embarkx
#      PGDATA: /data/postgres
#    volumes:
#      - postgres:/data/postgres
#    ports:
#      - "5432:5432"
#    networks:
#      - postgres
#    restart: unless-stopped
#
#  pgadmin:
#    container_name: pgadmin_container
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    volumes:
#      - pgadmin:/var/lib/pgadmin
#    ports:
#      - "5050:80"
#    networks:
#      - postgres
#    restart: unless-stopped
#  zipkin:
#    image: openzipkin/zipkin
#    container_name: zipkin
#    ports:
#       - 9411:9411
#    networks:
#      - postgres
#  rabbitmq:
#    image: rabbitmq:3-management
#    container_name: rabbitmq
#    ports:
#      - 5672:5672
#      - 15672:15672
#    networks:
#      - postgres
#networks:
#  postgres:
#    driver: bridge
#
#volumes:
#  postgres:
#  pgadmin:

services:
  postgres:
    container_name: postgres
    image: postgres
    platform: linux/amd64
    environment:
      POSTGRES_USER: embarkx
      POSTGRES_PASSWORD: embarkx
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    platform: linux/amd64
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
  config-server-ms:
    image: aadipvt005/config-server-ms:latest
    platform: linux/amd64
    container_name: config-server-ms
    ports:
      - 8080:8080
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  servicereg:
    image: aadipvt005/servicereg:latest
    container_name: servicereg
    platform: linux/amd64
    ports:
      - 8761:8761
    depends_on:
      - rabbitmq
      - zipkin
      - postgres
      - pgadmin
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  companyms:
    image: aadipvt005/companyms:latest
    container_name: company
    platform: linux/amd64
    ports:
      - 8081:8081
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  jobms:
    image: aadipvt005/jobms:latest
    container_name: job
    platform: linux/amd64
    ports:
      - 8082:8082
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  reviewms:
    image: aadipvt005/reviewms:latest
    container_name: review
    platform: linux/amd64
    ports:
      - 8083:8083
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  rabbitmq:
    image: rabbitmq:4.0-management
    container_name: rabbitmq
    platform: linux/amd64
    environment:
      RABBITMQ_PLUGINS_ENABLE: "rabbitmq_management"

    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - postgres
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    platform: linux/amd64
    ports:
      - 9411:9411
    networks:
      - postgres
  gateway-ms:
    image: aadipvt005/gateway-ms:latest
    container_name: gateway-ms
    platform: linux/amd64
    ports:
      - 8084:8084
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
networks:
  microservice-network:
    driver: bridge
  postgres:
    driver: bridge
volumes:
  postgres:
  pgadmin: